&Пластилин
Перем Логирователь; // BSLLS:Typo-off

Функция Обработать(Результат, Команда, ТипКоманды, ПараметрыКоманды) Экспорт

	ПараметрыСкрипта = ПараметрыКоманды.Параметры;
	Имя = ПараметрыСкрипта.Получить("Имя");

	Если ЭтоЗапрос(ТипКоманды) Тогда
		ЭтоЗапрос = Истина;
		ПредставлениеКоманды = "Запрос " + Имя;
	Иначе
		ЭтоЗапрос = Ложь;
		ПредставлениеКоманды = "Скрипт " + Имя;
	КонецЕсли;

	Если Результат = Неопределено Тогда
		Логирователь.ВЛог("Не удалось выполнить - " + ПредставлениеКоманды + " СУБД");	
		Возврат Ложь;
	КонецЕсли;

	Если ЭтоЗапрос Тогда
		Возврат ОбработатьРезультатЗапроса(Результат, Команда, Имя, ПараметрыКоманды);
	Иначе
		Возврат ОбработатьРезультатВыполненияСкрипта(Результат, Команда, Имя, ПараметрыКоманды);
	КонецЕсли;

КонецФункции

Функция ОбработатьРезультатВыполненияСкрипта(Результат, Команда,  Имя, ПараметрыКоманды) // BSLLS:UnusedParameters-off

	ПараметрыСкрипта = ПараметрыКоманды.Параметры;
	ОжидатьРезультат = ПараметрыСкрипта.Получить("ОжидатьРезультат");
	Если ОжидатьРезультат = Неопределено Тогда
		ОжидатьРезультат = 1;	
	Иначе
		ОжидатьРезультат = Число(ОжидатьРезультат);
	КонецЕсли;

	Если Результат = ОжидатьРезультат Тогда
		Возврат Истина;
	Иначе
		ТекстОшибки = "
				|Не верный результат выполнения скрипта " + Имя + ".
				| Результат: " + Строка(Результат) + "
				| Ожидаем: " + Строка(ОжидатьРезультат);
		Логирователь.ВЛог(ТекстОшибки, Истина, , , , Ложь);
		Возврат Ложь;
	КонецЕсли;

КонецФункции

Функция ОбработатьРезультатЗапроса(Результат, Команда,  Имя, ПараметрыКоманды) // BSLLS:UnusedParameters-off

	ТипРезультата = ТипЗнч(Результат);
	Если ТипРезультата <> Тип("ТаблицаЗначений") Тогда
		Логирователь.ВЛог("Не определен тип результата запроса  - " + Имя + ", тип: " + Строка(ТипРезультата));
		Возврат Ложь;		
	КонецЕсли;

	ПараметрыСкрипта = ПараметрыКоманды.Параметры;
	ОжидатьКоличествоСтрок = ПараметрыСкрипта.Получить("ОжидатьКоличествоСтрок");
	Если ОжидатьКоличествоСтрок <> Неопределено Тогда
		Возврат	ОбработатьРезультатЗапросаПоКоличествуСтрок(Результат, ОжидатьКоличествоСтрок, 
																Команда,  Имя, ПараметрыКоманды);
	Иначе
		Возврат ВывестиРезультатЗапроса(Результат, Команда,  Имя, ПараметрыКоманды);
	КонецЕсли;

КонецФункции

Функция ОбработатьРезультатЗапросаПоКоличествуСтрок(Результат, ОжидатьКоличествоСтрок, Команда,  Имя, ПараметрыКоманды)
	
	ОжидатьКоличествоСтрок = Число(ОжидатьКоличествоСтрок);

	КоличествоСтрок  = Результат.Количество();

	Если КоличествоСтрок = ОжидатьКоличествоСтрок Тогда
		Возврат Истина;	
	КонецЕсли;

	ПараметрыСкрипта = ПараметрыКоманды.Параметры;

	ПовторныхОтправок = ПараметрыСкрипта.Получить("ПовторныхОтправок");
	Если ПовторныхОтправок = Неопределено Тогда
		ПовторныхОтправок = 0;	
	Иначе
		ПовторныхОтправок = Число(ПовторныхОтправок);
	КонецЕсли;

	ПовторнаяОтправка = ПараметрыСкрипта.Получить("ПовторнаяОтправка");
	Если ПовторнаяОтправка = Неопределено Тогда
		ПовторнаяОтправка = 0;	
	Иначе
		ПовторнаяОтправка = Число(ПовторнаяОтправка);	
	КонецЕсли;

	ПовторнаяОтправка = ПовторнаяОтправка + 1;

	ТекстСообщения = "
		|Результат выполнения запроса - " + Имя + "
		| 	Количество строк: " + Строка(КоличествоСтрок) + "
		| 	Ожидаемых: " + Строка(ОжидатьКоличествоСтрок);

	Если ПовторнаяОтправка > ПовторныхОтправок Тогда		
		Логирователь.ВЛог(ТекстСообщения, Истина, , , , Ложь);
		Возврат Ложь;	
	КонецЕсли;

	СекундаМлс = 1000;
	ПаузаСекунд = ПараметрыСкрипта.Получить("Пауза");
	Если ПаузаСекунд <> Неопределено Тогда
		ПаузаСекунд = Число(ПаузаСекунд);
		Приостановить(ПаузаСекунд * СекундаМлс);	
	КонецЕсли;

	ПараметрыСкрипта.Вставить("ПовторнаяОтправка", ПовторнаяОтправка);
	ПараметрыКоманды.Вставить("Параметры", ПараметрыСкрипта);

	ТекстСообщения = ТекстСообщения + "
						|Повторное выполнение запроса - " + Имя 
						+ ". Попытка №" + Строка(ПовторнаяОтправка);
	Логирователь.Отладка(ТекстСообщения);

	Возврат Команда.ВыполнитьКоманду(ПараметрыКоманды); 

КонецФункции

Функция ВывестиРезультатЗапроса(ТаблицаРезультата, Команда,  Имя, ПараметрыКоманды) // BSLLS:UnusedParameters-off 
	
	ТекстНачало = "Результат запроса: " + Имя;
	Если ТаблицаРезультата.Количество() = 0 Тогда
		Логирователь.ВЛог(ТекстНачало + " - Пусто");				
		Возврат Истина;
	КонецЕсли;
	
	ТекстРезультата = ТекстНачало + Символы.ПС;
	НомерПП = 0;
	Для каждого СтрокаТаблицы Из ТаблицаРезультата Цикл
		НомерПП = НомерПП + 1;
		ТекстРезультата = "  Строка №" + Строка(НомерПП);
		Для каждого Колонка Из ТаблицаРезультата.Колонки Цикл
			ИмяКолонки = Колонка.Имя;
			
			Значение = СокрЛП(СтрокаТаблицы[ИмяКолонки]);			
			ТекстРезультата = ТекстРезультата + Символы.ПС + "    " + ИмяКолонки + ": " + Значение;	

		КонецЦикла;	
		Логирователь.ВЛог(Символы.ПС + ТекстРезультата, , , , , Ложь);
	КонецЦикла;
	
	РезультатВозврата = Истина;
	Возврат РезультатВозврата;

КонецФункции

Функция ЭтоЗапрос(ТипКоманды)
	Возврат ТипКоманды = "Запрос";	
КонецФункции

&Желудь
&Прозвище("ОбработчикРезультатаSQL")
Процедура ПриСозданииОбъекта()
КонецПроцедуры