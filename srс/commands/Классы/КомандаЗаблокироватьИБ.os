// ЗаблокироватьИБ
#Использовать "..//../../srс/Модули"

&Пластилин
Перем Настройки;

&Пластилин
Перем УправлятельКластера; // BSLLS:Typo-off

&Пластилин
Перем Логирователь; // BSLLS:Typo-off

Функция ВыполнитьКоманду(ПараметрыКоманды) Экспорт
	
	Если НЕ ТребуетВыполнения() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Проверка = Общий.СвойствоСтруктуры(ПараметрыКоманды, "Проверка", Ложь);
	Возврат ВыполнитьКомандуСПараметрами(Проверка, ПараметрыКоманды);
	
КонецФункции

&Асинх
Функция ВыполнитьКомандуАсинх(ПараметрыКоманды) Экспорт // BSLLS:Typo-off
	
	Возврат РаботаСКомандами.ПереопределитьВыполнитьКомандуАсинх(ПараметрыКоманды, ЭтотОбъект);

КонецФункции

Функция ТребуетВыполнения()
	
	Если Настройки.ИспользоватьДинамическоеОбновление Тогда
		Возврат Ложь;	
	КонецЕсли;

	Возврат Истина;

КонецФункции

Функция ВыполнитьКомандуСПараметрами(Проверка = Ложь, 
										ПараметрыКоманды = Неопределено) Экспорт // BSLLS:UnusedParameters-off
	
	Кластер = УправлятельКластера.Получить();

	Если Проверка Тогда
		// Периодически снимается сама блокировку,
		// 	поэтому приходится проверять несколько раз, тут просто устанавливаем её заного
		Логирователь.ВЛог("Проверяю блокировку информационной базы");
	Иначе
		Логирователь.ВЛог("Устанавливаю блокировку информационной базы", , Истина);
	КонецЕсли;
	
	ПараметрыПодключения = Настройки.ПараметрыПодключения;

	Попытка
		Кластер.БлокировкаИнформационнойБазы(ПараметрыПодключения.ИмяБазы, 
												ПараметрыПодключения.СообщениеПриБлокировкиИБ, 
												ПараметрыПодключения.КодДоступаПриБлокировкиИБ, , , Истина);  
	Исключение
		Логирователь.ВЛог(ОписаниеОшибки(), Истина, Истина);
		Возврат Ложь;
	КонецПопытки;

	Если Проверка Тогда
		Логирователь.ВЛог("Проверка блокировки информационной базы выполнена");
	Иначе
		Логирователь.ВЛог("Блокировка информационной базы установлена");
	КонецЕсли;

	Возврат Истина;

КонецФункции

&Желудь
&Прозвище("Команда")
Процедура ПриСозданииОбъекта()

КонецПроцедуры