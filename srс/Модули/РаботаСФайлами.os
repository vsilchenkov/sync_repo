Функция ПрочитатьYAMLФайл(Знач ПутьКФайлу) Экспорт // BSLLS:LatinAndCyrillicSymbolInWord-off
	
	Если СтрНачинаетсяС(ПутьКФайлу, "\") Тогда
		ПутьКФайлу = ТекущийКаталог() + ПутьКФайлу;
	КонецЕсли;

	МенеджерПараметров = Новый МенеджерПараметров();
	МенеджерПараметров.ИспользоватьПровайдерYAML();	
	МенеджерПараметров.УстановитьФайлПараметров(ПутьКФайлу);

	МенеджерПараметров.Прочитать();
	Если Не МенеджерПараметров.ЧтениеВыполнено() Тогда
		ВызватьИсключение "Файл с настройками не найден по пути: " + ПутьКФайлу;
	КонецЕсли;	

	Возврат МенеджерПараметров;

КонецФункции

Функция ПрочитатьФайлВМассивСтрок(ПутьКФайлу, ВызыватьИсключение = Истина, 
									Логирователь = Неопределено, Монопольно = Ложь) Экспорт
	
	СтрокиДанных = Новый Массив;

	Файл = Новый Файл(ПутьКФайлу);
	Если Не Файл.Существует() Тогда
		ТекстСообщения = "Файл не найден - " + ПутьКФайлу;
		ВЛог(ТекстСообщения, ВызыватьИсключение, Логирователь, Истина);
		Возврат СтрокиДанных;
	КонецЕсли;

	ЧтениеТекста = Новый ЧтениеТекста;
		
	Попытка
		ЧтениеТекста.Открыть(ПутьКФайлу, "UTF-8", , , Монопольно);	
	Исключение
		ВЛог(ОписаниеОшибки(), ВызыватьИсключение, Логирователь, Истина);
		Возврат СтрокиДанных;
	КонецПопытки;

	СтрокаДанных = ЧтениеТекста.ПрочитатьСтроку();
	Пока СтрокаДанных <> Неопределено Цикл
		Если ЗначениеЗаполнено(СтрокаДанных) Тогда
			СтрокиДанных.Добавить(СокрЛП(СтрокаДанных));	
		КонецЕсли;	
		СтрокаДанных = ЧтениеТекста.ПрочитатьСтроку();
	КонецЦикла;
	
	ЧтениеТекста.Закрыть();	

	Возврат СтрокиДанных;

КонецФункции

Функция СформироватьИмяФайла(Имя, Расширение, НаДату = Неопределено) Экспорт
	
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДата();
	КонецЕсли;

	Возврат 	Имя 
				+ "_" 
				+ Формат(НаДату, "ДФ=ггггММдд")
				+ "."
				+ СокрЛП(Расширение);

КонецФункции

Процедура ЗаписатьТекстовыйФайл(Текст, ПутьКФайлу) Экспорт

	ТекстовыйДокумент  = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(Текст);

	ТекстовыйДокумент.Записать(ПутьКФайлу);
	
КонецПроцедуры

Процедура ДобавитьТекстВФайл(Текст, ПутьКФайлу) Экспорт

	Если НЕ ФайлСуществует(ПутьКФайлу) Тогда
		ЗаписатьТекстовыйФайл(Текст, ПутьКФайлу);	
	Иначе
		
		ТекстовыйДокумент  = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.Прочитать(ПутьКФайлу);

		ТекстовыйДокумент.ДобавитьСтроку(Текст);
		ТекстовыйДокумент.Записать(ПутьКФайлу);

	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьФайл(ПутьКФайлу) Экспорт
	
	Если ФайлСуществует(ПутьКФайлу) Тогда
		УдалитьФайлы(ПутьКФайлу);		
	КонецЕсли;

КонецПроцедуры

Функция ФайлСуществует(ПутьКФайлу) Экспорт
	
	ФайлПоиска = Новый Файл(ПутьКФайлу);
	Возврат ФайлПоиска.Существует();

КонецФункции

Процедура ВЛог(ТекстСообщения, ВызыватьИсключение = Истина, Логирователь = Неопределено, Ошибка = Ложь)

	Если ВызыватьИсключение Тогда
		ВызватьИсключение ТекстСообщения;
	Иначе
		Если Логирователь <> Неопределено Тогда
			Логирователь.ВЛог(ТекстСообщения, Ошибка);		
		КонецЕсли;	
	КонецЕсли;	 

КонецПроцедуры