// ЗапуститьВнешниеОбработкиИзРепозитория
#Использовать "..//../../src/Модули"

Перем КомандаЗапуститьВРежимеПредприятия;
Перем УправлятельГит; // BSLLS:Typo-off
Перем Логирователь; // BSLLS:Typo-off

Функция ВыполнитьКоманду(ПараметрыКоманды) Экспорт // BSLLS:UnusedParameters-off
	
	Параметры = ПараметрыКоманды.Параметры;
	РабочийКаталог = Параметры.Получить("РабочийКаталог");
	РабочийКаталогПолный = ОбъединитьПути(ТекущийКаталог(), РабочийКаталог);
	ИмяРепозитория = Параметры.Получить("ИмяРепозитория");
	
	ПропускатьПриОшибке = ПрообразованияТипов.БулевоИзСтроки(Параметры.Получить("ПропускатьПриОшибке"));

	Логирователь.ВЛог("Начинаю запуск внешних обработок из репозитория", , Ложь); 
	
	РезультатКлонирования = КлонироватьРепозиторий(РабочийКаталогПолный, ИмяРепозитория, Параметры); 
	Если РезультатКлонирования = Ложь И ПропускатьПриОшибке <> Истина Тогда
		Возврат РезультатКлонирования;	
	КонецЕсли;
	
	КаталогОбработокПолный = КаталогОбработокПолный(РабочийКаталогПолный, ИмяРепозитория);
	РезультатВыполнения = ЗапуститьОбработкиИзКаталога(КаталогОбработокПолный);
	
	Возврат РезультатВыполнения;

КонецФункции

Функция ЗапуститьОбработкиИзКаталога(КаталогПолный)

	НайденныеФайлы = НайтиФайлы(КаталогПолный, "*.epf");
	Если НайденныеФайлы.Количество() > 0 Тогда		
	
		Для каждого ИмяФайлаОбработки Из НайденныеФайлы Цикл
		
			Логирователь.ВЛог("Запускаю обработку: " + ИмяФайлаОбработки);
			
			ОжидатьВыполнения = Истина;
			КлючиЗапуска = КлючЗапускаОбработки(КаталогПолный, ИмяФайлаОбработки)
							+ " "
							+ КлючиПараметров();			
			КомандаЗапуститьВРежимеПредприятия.ЗапуститьВРежимеПредприятия(ОжидатьВыполнения, КлючиЗапуска);

		КонецЦикла;

	Иначе
		Логирователь.ВЛог("Обработок в каталоге: " + КаталогПолный + " не обнаружено");
	КонецЕсли;

	Возврат Истина;

КонецФункции

Функция КлючЗапускаОбработки(КаталогОбработокПолный, ИмяФайлабработки)
	
	КлючЗапуска = СтрШаблон("/Execute ""%1\%2""", КаталогОбработокПолный, ИмяФайлабработки);
	Возврат КлючЗапуска;

КонецФункции

Функция КаталогОбработокПолный(РабочийКаталог, ИмяРепозитория)
	
	КаталогРепозитория = ОбъединитьПути(РабочийКаталог, ИмяРепозитория);

	// Пример: 20240701
	КаталогОбработок = Формат(ТекущаяДата(), "ДФ=ггММдд");
	
	ПолныйПуть = ОбъединитьПути(КаталогРепозитория, КаталогОбработок);
	Возврат ПолныйПуть;
	
КонецФункции

Функция КлючиПараметров()
	
	КлючиПараметров = "ЗапуститьОбработчик;ЗавершитьРаботуСистемы";	
	КлючиПараметров = "/C " + """" + КлючиПараметров + """";
	
 	Возврат КлючиПараметров;

КонецФункции
Функция КлонироватьРепозиторий(РабочийКаталог, ИмяРепозитория, Параметры)
	
	АдресРепозитория = Параметры.Получить("АдресРепозитория");
	Токен = Параметры.Получить("Токен");

	ПутьРепозиторияСТокеном = "https://oauth2:" 
								+ Токен
								+ "@"
								+ АдресРепозитория
								+ ".git";
	
	Результат = УправлятельГит.КлонироватьИлиПолучитьИзмененияРепозитория(РабочийКаталог, 
																			ИмяРепозитория, 
																			ПутьРепозиторияСТокеном);	
	Возврат Результат;
								
КонецФункции

&Асинх
Функция ВыполнитьКомандуАсинх(ПараметрыКоманды) Экспорт // BSLLS:Typo-off
	
	Возврат РаботаСКомандами.ПереопределитьВыполнитьКомандуАсинх(ПараметрыКоманды, ЭтотОбъект);

КонецФункции

&Желудь
&Прозвище("Команда")
Процедура ПриСозданииОбъекта(&Пластилин("КомандаЗапуститьВРежимеПредприятия") _КомандаЗапуститьВРежимеПредприятия,
								&Пластилин("УправлятельГит") _УправлятельГит,
								&Пластилин("Логирователь") _Логирователь)

	КомандаЗапуститьВРежимеПредприятия = _КомандаЗапуститьВРежимеПредприятия;
	УправлятельГит = _УправлятельГит;
	Логирователь = _Логирователь;

КонецПроцедуры