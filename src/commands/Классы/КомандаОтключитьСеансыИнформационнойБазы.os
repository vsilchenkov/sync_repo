// ОтключитьСеансыИнформационнойБазы
#Использовать "..//../../src/Модули"
#Использовать async

&Пластилин
Перем Настройки;

&Пластилин
Перем УправлятельКластера; // BSLLS:Typo-off
&Пластилин
Перем УправлятельКластераАсинх; // BSLLS:Typo-off

&Пластилин
Перем Логирователь; // BSLLS:Typo-off

Функция ВыполнитьКоманду(ПараметрыКоманды) Экспорт
	
	Если НЕ ТребуетВыполнения() Тогда
		Возврат Истина;
	КонецЕсли;

	Проверка = Общий.СвойствоСтруктуры(ПараметрыКоманды, "Проверка", Ложь);
	Возврат ВыполнитьКомандуСПараметрами(, , , Проверка, ПараметрыКоманды);

КонецФункции

&Асинх
Функция ВыполнитьКомандуАсинх(ПараметрыКоманды) Экспорт // BSLLS:Typo-off
	
	Возврат РаботаСКомандами.ПереопределитьВыполнитьКомандуАсинх(ПараметрыКоманды, ЭтотОбъект);

КонецФункции

Функция ТребуетВыполнения()
	
	Если Настройки.ИспользоватьДинамическоеОбновление Тогда
		Возврат Ложь;	
	КонецЕсли;

	Возврат Истина;

КонецФункции

Функция ВыполнитьКомандуСПараметрами(ПопыткаОтключения = 1, 
															КоличествоПопыток = 10,
															ВыводитьЛог = Истина, 
															Проверка = Ложь,
															ПараметрыКоманды = Неопределено) // BSLLS:UnusedParameters-off

	
	Параметры = ПараметрыКоманды.Параметры;

	ПриложенияИсключения = Параметры.Получить("ПриложенияИсключения");
	Если ПриложенияИсключения = Неопределено Тогда
		ПриложенияИсключения = "";		
	КонецЕсли;

	Кластер = УправлятельКластера.Получить();
	
	ВТелеграм = НЕ Проверка;

	Если ВыводитьЛог Тогда
		Если Проверка Тогда
			Логирователь.ВЛог("Проверяю наличие активных сеансов ИБ", , Ложь);		
		Иначе
			Если ПопыткаОтключения = 1 Тогда
				Логирователь.ВЛог("Отключаю сеансы и соединения ИБ", , ВТелеграм);		
			КонецЕсли;		
			Логирователь.ВЛог("Попытка №" + Строка(ПопыткаОтключения) + " отключения сеансов и соединений ИБ");	
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыПодключения = Настройки.ПараметрыПодключения;
	ИмяБазы = ПараметрыПодключения.ИмяБазы;

	КоличествоИсключений = 0;

	Попытка
   		ОтключитьСеансыИнформационнойБазы(ИмяБазы, Кластер, ПриложенияИсключения, КоличествоИсключений);		
	Исключение
		Логирователь.ВЛог(ОписаниеОшибки(), Ложь, Истина); // не уходим, пытаемся повторно запустить		
	КонецПопытки;

	Попытка
		ТаблицаСеансов = Кластер.СписокСеансовИнформационнойБазы(ИмяБазы);	
	Исключение
		Логирователь.ВЛог(ОписаниеОшибки(), Истина, Истина);		
		Возврат Ложь;
	КонецПопытки;
		
	Если ТаблицаСеансов.Количество() - КоличествоИсключений > 0 Тогда
		
		ПопыткаОтключения = ПопыткаОтключения + 1;
		Если ПопыткаОтключения > КоличествоПопыток Тогда
			Логирователь.ВЛог("Не удалось отключить соединения ИБ", Истина, ВТелеграм);
			Возврат Ложь;
		Иначе
			ВыполнитьКомандуСПараметрами(ПопыткаОтключения, КоличествоПопыток, ВыводитьЛог, Проверка, ПараметрыКоманды);		
		КонецЕсли;

		ПопыткаОтключения = ПопыткаОтключения + 1;

	КонецЕсли;

	Если ВыводитьЛог Тогда
		Если Проверка Тогда
			Логирователь.ВЛог("Проверка наличие активных сеансов выполнена");	
		Иначе
			Логирователь.ВЛог("Сеансы и соединения ИБ отключены");	
		КонецЕсли;
	КонецЕсли;	

	Возврат Истина;

КонецФункции

Функция ОтключитьСеансыИнформационнойБазы(ИмяБазы, Кластер, ПриложенияИсключения = "", КоличествоИсключений = 0)
	
	Ждем = Новый Массив();

	СеансыБазы = Кластер.СписокСеансовИнформационнойБазы(ИмяБазы);
	
	ПаузаМеждуВызовами = УправлятельКластераАсинх.ПаузаМеждуВызовами();
	КоличествоОперацийЗаВызов = УправлятельКластераАсинх.КоличествоОперацийЗаВызов();

	КоличествоСеансов = СеансыБазы.Количество();
	СеансыКОтключению = Новый Массив;
	ПозицияСеанса = 0;
	
	Для Каждого Сеанс Из СеансыБазы Цикл
		
		ПозицияСеанса = ПозицияСеанса + 1;

		Если ЗначениеЗаполнено(ПриложенияИсключения) 
					И СтрНайти(ПриложенияИсключения, Сеанс.Приложение) > 0 Тогда
			
			КоличествоИсключений = КоличествоИсключений + 1;
			Продолжить;
			
		КонецЕсли;
		
		СеансыКОтключению.Добавить(Сеанс);
		Если СеансыКОтключению.Количество() >= КоличествоОперацийЗаВызов 
				Или ПозицияСеанса = КоличествоСеансов Тогда

			СеансыКОтключениюКопия = Общий.СкопироватьМассив(СеансыКОтключению);
			Обещание = УправлятельКластераАсинх.ОтключитьСеансыИнформационнойБазы(Кластер, СеансыКОтключениюКопия);
			Ждем.Добавить(Обещание);

			СеансыКОтключению.Очистить();			

			Если ПозицияСеанса < КоличествоСеансов Тогда
				Приостановить(ПаузаМеждуВызовами);							
			КонецЕсли;

		КонецЕсли;		

	КонецЦикла;
				
	Если Ждем.Количество() = 0 Тогда
		Возврат Истина; 
	КонецЕсли;

	Обещания.ОжидатьВсе(Ждем);

	Для каждого Обещание Из Ждем Цикл
	
		Результат = Обещание.Получить();
		Если Результат <> Истина Тогда
			Возврат Ложь;			
		КонецЕсли;

	КонецЦикла;

	Возврат Истина;

КонецФункции

&Желудь
&Прозвище("Команда")
Процедура ПриСозданииОбъекта()

КонецПроцедуры