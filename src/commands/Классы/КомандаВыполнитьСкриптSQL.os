 // ВыполнитьКомандуSQL
#Использовать "..//../../src/Модули"

&Пластилин
Перем УправлятельSQL; // BSLLS:Typo-off

&Пластилин
Перем Логирователь; // BSLLS:Typo-off

&Пластилин
Перем СкриптыSQL;

&Пластилин(Значение = "ОбработчикРезультатаSQL", Тип = "Массив")
Перем ОбработчикиРезультата;

Функция ВыполнитьКоманду(ПараметрыКоманды) Экспорт // BSLLS:UnusedParameters-off
	
	ПараметрыСкрипта = ПараметрыКоманды.Параметры;
	ПропускатьПриОшибке = ПрообразованияТипов.БулевоИзСтроки(ПараметрыСкрипта.Получить("ПропускатьПриОшибке"));

	Имя = ПараметрыСкрипта.Получить("Имя");

	Логирователь.ВЛог("Выполняю скрипт SQL: " + Имя);

	Параметр1 = ПараметрыСкрипта.Получить("Параметр1");

	ТекстКоманды = СкриптыSQL.Получить(Имя, Параметр1);
	Если ТекстКоманды = Неопределено Тогда
		ТекстОшибки = "Не определен текст скрипта - " + Имя;
		Логирователь.ВЛог(ТекстОшибки, Истина);
		Возврат Ложь;	
	КонецЕсли;
	
	Попытка
		Результат = УправлятельSQL.ВыполнитьКоманду(ТекстКоманды);
	Исключение
		Логирователь.ВЛог("Скрипт SQL не выполнен - " + Имя + "." + ОписаниеОшибки(), Истина);
		Возврат ПропускатьПриОшибке;
	КонецПопытки;

	Для каждого ОбработчикРезультата Из ОбработчикиРезультата Цикл		
		РезультатОбработки = ОбработчикРезультата.Обработать(Результат, ЭтотОбъект, "Скрипт", ПараметрыКоманды);
		Если РезультатОбработки = Ложь Тогда
			Возврат ПропускатьПриОшибке;	
		КонецЕсли;
	КонецЦикла;

	Возврат Истина;
	
КонецФункции

&Асинх
Функция ВыполнитьКомандуАсинх(ПараметрыКоманды) Экспорт // BSLLS:Typo-off
	
	Возврат РаботаСКомандами.ПереопределитьВыполнитьКомандуАсинх(ПараметрыКоманды, ЭтотОбъект);

КонецФункции

&Желудь
&Прозвище("Команда")
Процедура ПриСозданииОбъекта()

КонецПроцедуры