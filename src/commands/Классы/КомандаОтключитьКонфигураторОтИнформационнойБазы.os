// ОтключитьКонфигураторОтИнформационнойБазы
#Использовать "..//../../src/Модули"

&Пластилин
Перем Настройки;

&Пластилин
Перем УправлятельКластера;

&Пластилин
Перем Логирователь; // BSLLS:Typo-off

Функция ВыполнитьКоманду(ПараметрыКоманды = Неопределено) Экспорт // BSLLS:UnusedParameters-off
	
	Если УправлятельКластера.ЗакрытКонфигуратор_Получить() = Истина Тогда
		Возврат Истина;		
	КонецЕсли;

	Кластер = УправлятельКластера.Получить();
	ПараметрыПодключения = Настройки.ПараметрыПодключения;
	
	ИмяПриложения = "Designer";
	
	Попытка
		ТаблицаСеансов = Кластер.СписокСеансовИнформационнойБазы(ПараметрыПодключения.ИмяБазы);
	Исключение
		Логирователь.ВЛог(ОписаниеОшибки(), Истина, Истина);
		Возврат Ложь;
	КонецПопытки;

	СтруктураПоиска = Новый Структура("Приложение", ИмяПриложения);
	Сеансы = ТаблицаСеансов.НайтиСтроки(СтруктураПоиска);
	Если Сеансы.Количество() <> 0 Тогда
		
		Логирователь.ВЛог("Закрытие конфигуратора в ИБ");

		Для каждого Сеанс Из Сеансы Цикл
			Попытка
				Кластер.ОтключитьСеанс(Сеанс.Идентификатор, Сеанс.Кластер);	
			Исключение
				Логирователь.ВЛог(ОписаниеОшибки(), Истина, Истина);
				Возврат Ложь;
			КонецПопытки;
		КонецЦикла;	
				
		Логирователь.ВЛог("Конфигуратор закрыт");	

	КонецЕсли;	

	УправлятельКластера.ЗакрытКонфигуратор_Установить();
	Возврат Истина;

КонецФункции

&Асинх
Функция ВыполнитьКомандуАсинх(ПараметрыКоманды) Экспорт // BSLLS:Typo-off
	
	Возврат РаботаСКомандами.ПереопределитьВыполнитьКомандуАсинх(ПараметрыКоманды, ЭтотОбъект);

КонецФункции

&Желудь
&Прозвище("Команда")
Процедура ПриСозданииОбъекта()

КонецПроцедуры